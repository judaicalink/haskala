# Generated by Django 5.0.8 on 2024-09-03 15:11

import django.db.models.deletion
import uuid
import wagtail.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0094_alter_page_locale'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BookPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='BooksPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='CitiesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='ContactPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='DigitalBooksPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Edition',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('changes', models.CharField(blank=True, max_length=255, null=True)),
                ('changes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('city', models.IntegerField(blank=True, null=True)),
                ('references', models.CharField(blank=True, max_length=255, null=True)),
                ('references_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('year', models.CharField(blank=True, max_length=255, null=True)),
                ('year_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Editions',
            },
        ),
        migrations.CreateModel(
            name='HomePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Language',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
                ('language_code', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Languages',
            },
        ),
        migrations.CreateModel(
            name='Mention',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('mentionee', models.IntegerField(null=True)),
                ('mentionee_city', models.IntegerField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MyCustomModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='MyCustomPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('introduction', models.CharField(blank=True, max_length=255)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='People',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
            ],
        ),
        migrations.CreateModel(
            name='PeoplePage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(default=['"אחד המשוררים"', '(Dr. med.) איסטרייכער', '(Dr. med.) ווארבורג', '(Dr.) בריינערסדארף', '(Feder)', '(Feder)-Guttmann, Tuvia - פדר, טוביה', 'Aaron, Joseph Philipp', 'Aaron, Joseph Philipp - אהרן, יוסף', 'Abraham Isaak', 'Abraham Joel Emanuel', 'Abraham Moses', 'Abrahamsen, Moses Levin', 'Ackord, Elias', 'Ackord, Elias - אקורד, אליהו', 'Adolphi (Pastor)', 'Alexander, Abraham', 'Alexander, Isaak', 'Alexander, Isaak - אלכסנדר, יצחק', 'Alexander, Levy', 'Alexander, Levy', 'Alexander, Levy - אלכסנדר, לוי', 'Altona', 'Amsterdam', 'Anonym', 'Anonymous', 'Arnstein (Freiherr von), Nathan Adam', 'Arnstein, Benedict David', 'Arnstein, Benedict David - ארנשטיין, בנדיקט דוד', 'Arnstein, Benedikt', 'Arnstein, Josef', 'Arnstein, Meier', 'Arnstein, Nathan Adam (Freiherr von Arnstein)', 'Arnstein, Wolf I.', 'Asch, Abraham', 'Asch, Abraham - אש, אברהם', 'Ascher, Judas', 'Ascher, Judas - אשר, יהודה', 'Ascher, Saul', 'Ascher, Saul - אשר, שאול', 'Augsburg', 'Bamberg', 'Bamberger, Wolff', 'Baras, Simon', 'Baras, Simon - בר"ז, שמעון', 'Bartenstein, Joseph', 'Baruch Schick of Shklov', 'Baruch Schick of Shklov - שיק, ברוך משקלוב', 'Baschwitz', 'Baschwitz - בשוויץ, ברוך', 'Baschwitz, Zebi (Hirsch) ben Meir', 'Baschwitz, Zebi (Hirsch) ben Meir - בשביץ, צבי הירש בן מאיר', 'Basel', 'Bayreuth', 'Beer', 'Beer, Aaron', 'Beer, Moses', 'Beer, Peter', 'Beer, Peter - בער, פרץ', 'Beer-Bing, Jesaia - בער, ישי', 'Belinfante, Isaac', 'Belinfante, Isaac', 'Belinfante, Isaac - בלינפנטי, יצחק', 'Bellerman, Johann Joachim', 'Below (Münzdirektor)', 'Ben', 'Ben Seew, Juda Löb', 'Ben Seew, Juda Löb - בן-זאב, יהודה ליב', 'Ben-Jacob, Meir - בן-יעקב, מאיר', 'Bendavid, Lazarus', 'Bendavid, Lazarus - בנדוד, לצרוס', 'Bendix, Hirsch Nathan', 'Bendix, Jeremias', 'Bendix, Levin Nathan', 'Benet, Mordechai', 'Berend Callmann', 'Berend Ellerich', 'Berend Mendel', 'Berend, S. L. (Landesältester)', 'Berlin', 'Berlin Saul', 'Berlin, Hirsch', 'Berlin, Saul', 'Berlin, Saul - ברלין, שאול', 'Bernburg', 'Berr, Isaac Berr', 'Berr, Isaac Berr - בר, יצחק בר', 'Berr, Michel', 'Berr, Michel - בר, מיכאל', 'Bialystok', 'Bielau', 'Bielitz', 'Bing, Beer Abraham', 'Bing, Beer Abraham - בינג, אברהם בר', 'Binge, Abraham', 'Bloch, Marcus Elieser', 'Bloch, Marcus Elieser,Herz, Marcus,Wessely, Hartwig,Lindau, Baruch ben Jehuda Löb', 'Boas Isaak', 'Boas, Simon', 'Bock, Moses Hirsch', 'Bock, Moses Hirsch - בוק, משה (בן) צבי', 'Bondi, Hirsch', 'Bondi, Isaac', 'Bondi, Mardochai', 'Bondi, Mardochai - בונדי, מרדכי', 'Bondi, Moses', 'Bondi, Simon', 'Bonn', 'Borchard, Jacob Isaac', 'Bourdeaux', 'Bran, Alexander', 'Brandenburg', 'Braunschweig', 'Breslau', 'Breslauer, Mendel', 'Bresslau, Löbel', 'Brieg', 'Brno', 'Brody', 'Brooklyn', 'Bruchsal', 'Brug, Lazarus', 'Brünn', 'Buchner, Zeev Wolf', 'Buchner, Zeev Wolf - בוכנר, זאב וולף', 'Buda', 'Böhmisch Leipa', 'Büschenthal, Lippmann Moses', 'Büschenthal, Lippmann Moses - בישנטל, ליפמן משה', 'Cambridge', 'Carlotta Arnstein', 'Caspar, Isaac', 'Cassel, David', 'Celle', 'Chorin, Aaron', 'Chorin, Aaron - אהרן בן קלמן', 'Cohen, Benjamin Moses', 'Cohen, Benjamin Moses - כהן, בנימין משה', 'Cohen, Chanania Elchanan Chaj', 'Cohen, Chanania Elchanan Chaj - כהן, חנניה אלחנן חי', 'Cohen, Salomon Jacob', 'Cohen, Salomon Jacob - כהן, שלום', 'Cohn, Nathan (Lehrer)', 'Cologna, Abraham de', 'Cologna, Abraham de - קולוניא, אברהם חי די', 'Commentator', 'Constantinople', 'Copenhagen', 'Cöslin, Chajim', 'Cöslin, Chajim - קסלין, חיים', 'Damascus', 'Danzig', 'David Friedrich Megerlin', 'David Jakob Ries', 'David Levi', 'David Levin', 'David, Joseph Nathan', 'David, Meyer Michel (Kammeragent)', 'Davidson, Wolf', 'Davidson, Wolf - דוידזון, וולף', 'Dembitz', 'Den Haag', 'Derenburg, Zebi Hirsch', 'Derenburg, Zebi Hirsch - דרנבורג, הירש', 'Dessau', 'Dessau, Wolf', 'Dessau, Wolf - דסאו, וולף', 'Detmold', 'Detmold, Anna', 'Detmold, Samuel', 'Detmold, Samuel - דטמולד, שמואל', 'Diehl', 'Direktion der Kaufmännischen Ressource', 'Dobromil', 'Dohm (Syndicus)', 'Dohm, Lewin Benjamin', 'Dohm, Lewin Benjamin - דוהם, לוין בנימין', 'Dormitzer, Meir Markus', 'Dormitzer, Meir Markus - דורמיצר, מאיר', 'Dresden', 'Driesen', 'Driesen, Mordechai', 'Driesen, Mordechai - דריזן, מרדכי בן שמעיה', 'Drohobytsch', 'Dubno, Salomon', 'Dubno, Salomon', 'Dubno, Salomon - דובנא, שלמה', 'Dyhernfurth', 'Eger', 'Eisenstadt', 'Elbthal', 'Elia b. Daniel (Jaffe)', 'Elias Meyer (Kammeragent)', 'Elias, Philipp', 'Engel', 'Ephraim', 'Ephraim Lion Davids', 'Ephraim Lion Davids - אפרים בן ליב', 'Ephraim, David', 'Ephraim, Samuel Hirsch', 'Epstein, Pelte Moses', 'Epstein, Pelte Moses - אפשטין, פלטא בן משה', 'Erhraim, Veitel H.', 'Eschwege', 'Eskeles, Bernhard', 'Eskeles, Bernhard von', 'Euchel, Demoiselle', 'Euchel, Gottleb', 'Euchel, Gottleb - אייכל, יחיאל גוטליב', 'Euchel, Isaac Abraham', 'Euchel, Isaak', 'Ezechel Caspar', 'Fischer, Markus', 'Fischer, Markus - פישר, מאיר', 'Flekeles, Eleasar,  פלקלס, אלעזר בן דוד', 'Francia de Beaufleury, Louis', 'Franco Mendes, David', 'Franco Mendes, David', 'Franco Mendes, David - פרנקו-מנדס, דוד', 'Frankfurt am Main', 'Frankfurt/Oder', 'Franz II', 'Friedeburg, Madame Herz', 'Friedländer, Abraham', 'Friedländer, Adelaide', 'Friedländer, Angelika', 'Friedländer, Bernhard', 'Friedländer, David', 'Friedländer, Goldea', 'Friedländer, H. N. (Buchhändler)', 'Friedländer, Hanna', 'Friedländer, Heimann Meyer', 'Friedländer, Hinde', 'Friedländer, Hirsch Elias', 'Friedländer, Meier', 'Friedländer, Meyer', 'Friedländer, Michael', 'Friedländer, Michael - פרידענדר, מיכאל', 'Friedländer, Pessel', 'Friedländer, Rebekka Meyer', 'Friedländer, Rebekka Wulff', 'Friedländer, Recha Wulff', 'Friedländer, Salomon', 'Friedländer, Samuel Wulff', 'Friedländer, Sanwil', 'Friedländer, Sanwil', 'Friedländer, Sanwil - פרידלנדר, זנוויל שמואל', 'Friedländer, Simon', 'Friedländer, Simon Bendix', 'Friedländer, Veitel Bernhard', 'Friedländer, Wolf', 'Friedländer, Wolf Bernhard', 'Friedländer, Wulff', 'Friedrich Salomon Stöltzner', 'Friedrich Wilhelm III.', 'Friedrichsfeld', 'Friedrichsfeld, David', 'Friedrichsfeld, David', 'Friedrichsfeld, David - פרידריכספלד, דוד', 'Friesenhausen, David ben Meir Hakohen', 'Friesenhausen, David ben Meir Hakohen - פריזנהויזן, דוד', 'Fränkel', 'Fränkel, David', 'Fränkel, David', 'Fränkel, David - פרנקל, דוד', 'Fränkel, Michael', 'Fränkel, Moses S.', 'Furtado, Abraham', 'Furtado, Abraham - פורטאדו, אברהם', 'Fürst (Dr.)', 'Fürth', 'Fürth, Meyer Elkan', 'Fürth, Meyer Elkan - פירדא, אלחנן מאיר בן אברהם', 'Gallathea Salomon', 'Gans, Abraham', 'Gans, Salomon', 'Gardemain (Bankier), Daniel', 'Geisenheimer (Vorsteher des Philantropins)', 'Gerson, Elias', 'Gerson, Elias - אליהו מפינטשוב', 'Gesellschaft der Freunde', 'Gesellschaft der hebräischen Litteraturfreunde', 'Gesellschaft des Guten und Edlen', 'Gesellschaft des Guten und Edlen - חברת שוחרי הטוב והתושיה', 'Getzel, Jacob', 'Getzel, Meyer', 'Giuseppe Lazzaro Morpurgo', 'Glogau', 'Glogau, Hirsch Moses', 'Glogau, Hirsch Moses - גלוגוי, צבי הירש בן משה', 'Goldschmidt, Caroline', 'Goldschmidt, Moses', 'Gorizia', 'Graanboom, Izak', 'Graanboom, Izak - גראנבום, יצחק', 'Graff, Jacob', 'Gregoire, Henri', 'Gregorovius (Prof.), J.A.', 'Griechenland', 'Grodno', 'Gugenheim, Joseph', 'Gumpel, L.', 'Gumpertz, Aaron', 'Gumpertz, Aaron - גומפרץ, אהרון', 'Gunz, Simon', 'Gunzenhausen, Anna', 'Gurauer, Jacob Moses', 'Görz', 'Göttingen', 'Hagenau', 'Halberstadt', 'Halle', 'Halle, Joel Samuel von', 'Hamburg', 'Hanau', 'Hanau, Salomon', 'Hanau, Salomon - הנאו, שלמה זלמן', 'Hannover', 'Hart, Jacob', 'Hart, Jacob - אליקים בן אברהם', 'Hartknoch (Buchhändler)', 'Hasenpoth', 'Hechingen', 'Heidenheim, Wolf', 'Heidenheim, Wolf - הידנהים, וולף', 'Heilboth, Simon', 'Heimann', 'Heimann', 'Heimann - היימן', 'Heimann Enoch', 'Heinemann, Jermias', 'Heinemann, Jermias', 'Heinemann, Jermias - היינמן, ירמיה', 'Helft, Levy', 'Helft, Levy - הלפט, לוי', 'Henle, Elkan', 'Herford, Joel', 'Hermes, Johann Georg Christoph Friedrich', 'Herz (Professor), Marcus', 'Herz, Marcus', 'Herz, Marcus - הרץ, מרכוס', 'Herzbruck', 'Herzenskron, Joachim', 'Hildesheim', 'Hirsch Markus', 'Hirsch Münden', 'Hirsch, D. Z.', 'Hirsch, Isaac', 'Hirsch, Isaac - הירש, איצק ליב', 'Hirsch, Jakob', 'Hirsch, Joseph', 'Hirschberg', 'Hirschberg (Dr.)', 'Hirschel, Moses', 'Hirschel, Moses - הירשל, משה', 'Hohenems', 'Homberg, Herz', 'Homberg, Herz - הרץ, הומברג', 'Horowitz, Jehuda', 'Horowitz, Jehuda - הורוויץ, יהודה', 'Hourwitz, Zalkind', 'Hourwitz, Zalkind - הורביץ, זלקינד', 'Hoym, Karl Heinrich Graf von (Graf, Minister)', 'Hraschanzky, Georg', 'Hufnagel', 'Hufnagel', 'Hufnagel - הופנגל', 'Hurwitz, Philipp Lazarus', 'Hurwitz, Philipp Lazarus - הורוויץ, פיליפ לצרוס', 'Höchheimer, Simon', 'Höchheimer, Simon - הכהיימר, שמעון', 'Hönig, Aaron', 'Hönig, Enoch', 'Hönig, Israel (Edler von Hönigsberg, k.k. Regierungsrath, Tabak', 'Hönig, Israel (Edler von Hönigsberg, k.k. Regierungsrath, Tabak- und Siegelgefälldirektor)', 'Hönig, Joachim (Edler von Hönigsberg)', 'Hönig, Max (Edler von Hönig)', 'Isaac Aron', 'Isaia Norsa', 'Israel Levin', 'Israelitische Haupt', 'Israelitische Haupt- und Freischule zu Deßaus - משגיחי חנוך נערים בעיר דעסויא', 'Itzig (Landesältester)', 'Itzig (Oberkantor)', 'Itzig (Oberlandesältester), Daniel (Jaffe)', 'Itzig, Daniel (Jaffe)', 'Itzig, Daniel (Jaffe, Oberlandesältester)', 'Itzig, Daniel (Jaffe; Oberlandesältester)', 'Itzig, Elias Daniel', 'Itzig, Isaac Daniel', 'Itzig, Isaac Daniel', 'Itzig, Isaac Daniel - איציג, יצחק דניאל', 'Itzig, Jacob', 'Itzig, Jakob Daniel', 'Jacob, Abraham', 'Jacobson, Israel', 'Jacobys Buchhandlung', 'Jakob Daniel', 'Jakobson, Israel', 'Jaroslaw', 'Jaroslaw, Aron', 'Jaroslaw, Aron - ירוסלב, אהרן', 'Jeitteles, Baruch (Benedict)', 'Jeitteles, Baruch (Benedict)', 'Jeitteles, Baruch (Benedict) - ייטלש, ברוך', 'Jeitteles, Benjamin', 'Jeitteles, Ignaz', 'Jeitteles, Ignaz', 'Jeitteles, Ignaz - ייטלש, יגנץ', 'Jeitteles, Juda', 'Jeitteles, Juda', 'Jeitteles, Juda - ייטלש, יהודה', 'Jeitteles, Samuel', 'Jekutiel, Moses', 'Jekutiel, Moses - יקותיאל, משה', 'Jena', 'Jersualem', 'Jerusalem', 'Jewpatorija', 'Jeßnitz', 'Jonas Jeitteles', 'Jordan, Brüder', 'Joseph II', 'Joseph II. (Kaiser)', 'Joseph Philipp', 'Joseph Simon Muhr', 'Joseph, Victor', 'Jospeh Baruch Haim', 'Józefów', 'Jüdel Baruch', 'Kalker, Simon Isaac', 'Kalker, Simon Isaac - קלקר, שמעון', 'Kanischa', 'Karlsruhe', 'Kaskel, Michel', 'Kassel', 'Katz, Haim Abraham', 'Katz, Haim Abraham - כץ, חיים אברהם בן יהודה', 'Kaulla, Kacob', 'Kaulla, Karoline (Chaile)', 'Kaulla, Meier', 'Kaulla, Nathan Wolf', 'Kaulla, Salman', 'Kaulla, Salomon Hirsch', 'Kaulla, Wolf', 'Kausch, Johann Joseph', 'Kerner, Moshe', 'Kerner, Moshe - קרנר, משה בן אליעזר', 'Keyserling, Heinrich Christian (Reichsgraf)', 'Klatzki, Simon', 'Kleist', 'Kleist-Keyserling (Baron), Louis', 'Kohen Piwana, Josephi', 'Kohen Piwana, Josephi - פיבני, יוסף בן איזק, כהנא', 'Kohn, Salomon', 'Kohn, Salomon - כהן, משלם זלמן בן שלמה', 'Kolin', 'Kolmar', 'Komarno', 'Konsistorium der Israeliten', 'Koppel, Moses', 'Kopys', 'Korff (Graf), von', 'Krakow', 'Krause', 'Kreisch', 'Krossen an der Oder', 'Kuh, Ephraim Moses', 'Kuh, Ephraim Moses - קוה, אפרים', 'Kurland', 'Kuttenplan', 'Königsberg', 'Lachmann (Dr.)', 'Landau, Israel', 'Landau, Israel - לנדא, ישראל', 'Landau, Moses Israel', 'Landsberg/Warthe', 'Lax, Salomon', 'Lax, Salomon - לקס, שלמה', 'Lehmann Haas', 'Leiden', 'Leipnik', 'Leipzig', 'Lemans, Moses', 'Lemans, Moses - למנס, משה', 'Lemberg', 'Leo, Hartog', 'Leo, Hartog - לאו, הרטוג', 'Leopold Friedrrich Franz (Fürst)', 'Leopold II', 'Leopoldo Herz', 'Lepoc, Jonas', 'Lesczinski, Elasar', "Lesczinski, Elasar - לשצ'ינסקי, אלעזר", 'Levi, Avigdor', 'Levi, Avigdor - לוי, אביגדור', 'Levi, Hannover Raphael', 'Levi, Hannover Raphael - לוי, רפאל מהנובר', 'Levi, Joseph Jasmann ben Joel', 'Levi, Joseph Jasmann ben Joel - לוי, יוסף יוסמן בן יואל', 'Levi, Moses', 'Levin Magnus', 'Levin Salomon', 'Levin, Menachem Mendel', 'Levin, Menachem Mendel - לפין, מנחם מנדל', 'Levison, George (Mordechai Gumpel Schnaber)', 'Levison, George (Mordechai Gumpel Schnaber) - שנאבר-לויזון, גומפל מרדכי', 'Levy (Ältester der israelitischen Gemeinde)', 'Levy, Elie', 'Levy, Elie - אליהו חלפן', 'Levy, Moses Salomon', 'Levy, Samuel Isaak', 'Levy, Samuel Salomon', 'Levy, Sara', 'Levysohn, Hartog', 'Liebmann, Aaron', 'Lindau, Baruch', 'Lindau, Baruch ben Jehuda Löb', 'Lipmann, Nathan', 'Lissa', 'Livorno', 'Lobethal, Avigdor', 'London', 'Lowe, Johann Michael Siegfried', 'Luneville', 'Luzzatto, Ephraim', 'Luzzatto, Ephraim - לוצטו, אפרים', 'Lviv', 'Löb Hamm', 'Löser, Wolff', 'Löwe, Joel', 'Löwe, Joel', 'Löwe, Joel - ברי"ל, יואל', 'Löwenstamm, Chaim ben Arije Löb', 'Löwenstamm, Chaim ben Arije Löb - לוונשטם, חיים בן אריה ליב', 'Löwenstamm, Jaacov Moses', 'Löwenstamm, Jaacov Moses - לוונשטם, יעקב משה', 'Löwenstein, N. J.', 'Löwysohn, Salomon', 'Löwysohn, Salomon - לוויזון, שלמה', 'Lübeschütz', 'Lüpschütz, Selig', 'Magdeburg', 'Maimon, Salomon', 'Maimon, Salomon - מימון, שלמה', 'Mainz', 'Mannheim', 'Marcus (Ilfeld), Hartog (Hirsch)', 'Marcus (Ilfeld), Hartog (Hirsch) - מרקוס, צבי הירש בן מרדכי', 'Marcus Isaak', 'Marcus Issak', 'Marcus Salomon Levin', 'Marcus, Benedikt', 'Marcus, Tobias', 'Marcuse, Marcus', 'Marcuse, Moses', 'Marcuse, Moses - מרקוזי, משה', 'Marienwerder', 'Marks, J.', 'Marx (Dr.)', 'Mattersdorf', 'Matthieu, Levi', 'Meldola, Abraham', 'Meldola, Abraham - מילדולה, אברהם', 'Mendel Samuel', 'Mendel, Joachim', 'Mendelsohn, Moses', 'Mendelsohn, Moses - מנדלסון (פרנקפורט), משה', 'Mendelssohn, Joseph', 'Mendelssohn, Moses', 'Mesritsch', 'Metz', 'Meyer Bernhard', 'Meyer Gabriel', 'Meyer Joseph', 'Meyer Magnus', 'Meyer, Salomon Abraham', 'Milliaud, Moïse', 'Milliaud, Moïse - מיליו, משה', 'Minkowce', 'Mohilev', 'Moritz, Karl Philipp', 'Moritz, Karl Philipp - מוריץ, קרל פיליף', 'Moses Fürst', 'Moses Levin', 'Moses von Gottfried Jakob Schaller', 'Moses von Gottfried Jakob Schaller - שלר, משה גוטפריד יעקב', 'Moses, Jacob', 'Munich', 'Museum des Herrn Werkmeister', 'Müller', 'Nachod, Naftali', 'Nancy', 'Netivot', 'Neuhaus', 'Neumann, Israel Moses', 'Neumann, Israel Moses (Inspektor und Oberlehrer)', 'Neumann, Israel Moses - נוימן, ישראל משה', 'Neumann, Moses Samuel', 'Neumann, Moses Samuel - נוימן, משה שמואל', 'Neustrelitz', 'Neuzedlisch', 'New York', 'Nikolsburg', 'Nimwegen', 'Nowy Dwor Mazowiecki', 'Nuremberg', 'Obernick, Meir', 'Obernick, Meir', 'Obernick, Meir - אוברניק, מאיר', 'Ofen', 'Offenbach', 'Oppenheim, Isaac', 'Oppenheim, Madame W. J.', 'Oppenheim, Mendel', 'Oppenheim, Sigmund', 'Oppenheim, Simon ben David', 'Oppenheim, Simon ben David - אופנהים, שמעון בן דוד', 'Oppenheim, Veronika (Frumet)', 'Ottensosser, David', 'Ottensosser, David - אוטנזוסר, דוד', 'Ottensosser, Wolf', 'Oven, Abraham van', 'Oven, Abraham van - אובן, אברהם', 'Pappenheimer, Salomon Seligmann', 'Pappenheimer, Salomon Seligmann - פאפנהיים, שלמה', 'Paris', 'Pemberton, Henry', 'Pereire, Jacob Rodrigues', 'Pest', 'Pfalz', 'Pfeifer', 'Philippson, Moses', 'Philippson, Moses - פיליפסון, משה', 'Philipson, Moses', 'Philipson, Moses - פיליפסון, משה', 'Pieck', 'Pinczow', 'Pirnitz', 'Polonus (Dr.)', 'Poper, M.', 'Poper, M. - פופר, מרדכי', 'Porizk', 'Posen', 'Potsdam', 'Prag', 'Prague', 'Prekuln, Salomon', 'Prenzlau', 'Pressburg/Bratislava', 'Ragendorf', 'Rakonitz', 'Ramler, Karl Wilhelm', 'Ratibor', 'Rawa', 'Rawitz', 'Redaktion der "Sulamith"', 'Regensburg', 'Reggio', 'Reichenberg', 'Reiß, B.', 'Reschow', 'Reuben ben Abraham Levi', 'Reuben ben Abraham Levi - ראובן בן אברהם לוי', 'Riess, Nathan', 'Riess, Nathan', 'Riess, Nathan - ריז, נתן', 'Riga', 'Rochnove, Josel', 'Rodrigues', 'Rodrigues-Moreira, Jacob', 'Romanelli, Samuel', 'Romanelli, Samuel - רומנלי, שמואל', 'Rotterdam', 'Rödelheim', 'Salomon Marcus', 'Salomon Marcus Schiller', 'Salomon Marcus Schiller-Szinessy', 'Salomon, E.', 'Salomon, Gotthold', 'Salomon, Gotthold - סלומון, גוטהולד', 'Samocz', 'Samocz, Israel', 'Samocz, Israel - זמושץ, ישראל', 'Samuel Levin Isaac', 'Samuel Salomon', 'Sandersleben, Mosse Levi', 'Sandersleben, Mosse Levi - סנדרסלבן, משה לוי', 'Satanow', 'Satanow, Isaak', 'Satanow, Isaak', 'Satanow, Isaak - סטנוב, יצחק', 'Schack, Chaim ben Mosche', 'Schack, Chaim ben Mosche - שק, חיים בן משה', 'Schaller, Geoffroy', 'Schaller, Geoffroy-Jacoues', 'Schiff, Isaak Benedix', 'Schiff, Isaak Benedix - שיף, בנדיט איצק', 'Schklov', 'Schlesinger, Liebermann', 'Schlesinger, Liebermann Marcus', 'Schott, Benedict', 'Schottland', 'Schottländer, Aron', 'Schottländer, Benedikt', 'Schottländer, Benedikt - שוטלנדר, בנדיקט', 'Schulman, Naftali Hirtz', 'Schulman, Naftali Hirtz - שולמן, נפתלי הרץ', 'Schulz, Johann (Hofprediger)', 'Schuster, Getz', 'Schuster, Levin', 'Schwab, Abraham ben Menachem Mendel', 'Schwab, Abraham ben Menachem Mendel - שוואב, אברהם בן מנחם מנדל', 'Schwabacher, Heimann', 'Schwabacher, Heimann - שובכר, חיים צבי', 'Schwedt', 'Schwerin', 'Schönemann, Salomo', 'Schönemann, Salomo - שינמן, שלמה', 'Seeger', 'Seligmann, Jeannette', 'Seligmann, Wulff', 'Senftenberg', 'Shkloŭ', 'Sichel, Lemmlen', 'Silberstein, Philip', 'Simon', 'Simon Joseph', 'Simon, Mendel', 'Slawkowiec', 'Slonim', 'Soldin, Jakob', 'Soldin, Jakob - זולדין, אליקים איסרל', 'Somerhausen, Hirsch (Hartog)', 'Somerhausen, Hirsch (Hartog) - זומרהאוזן, הירש', 'Sommershausen (Direktor der Erziehungsanstalt)', 'Soußmann', 'Spalding', 'Spalding', 'Spalding - שפלדינג', 'Spira, Salomon', 'Stampfen', 'Stanislaus II. Poniatowski (König von Polen)', 'Stargard', 'Stettin', 'Strasbourg', 'Stuttgart', 'Sudilkov', 'Sulzbach', 'Susmann, Meier', 'Tachau', 'Tama, Mordechay', 'Tel Aviv', 'The Hague', 'Tismenitsa', 'Trebitsch', 'Triesch', 'Triest', 'Troplowitz, Joseph Ephrati', 'Troplowitz, Joseph Ephrati - האפרתי, יוסף מטראפלוויץ', 'Turiisk', 'Turin', 'Turnau', 'Tübingen', 'Ulmann, Naphtalie Herz', 'Ulmann, Naphtalie Herz - אולמן, נפתלי הרץ', 'Urjas, Nathan', 'Valabregue, Israel', 'Valabregue, Israel-Bernard de - ואלאברג, ישראל ברנאר דה', 'Vanoven, Joshua', 'Vanoven, Joshua - ונאובן, יהושע', 'Veitel, David Ephraim', 'Venice', 'Venture, Mardochée', 'Venture, Mardochée - ונטורה, מרדכי', 'Vienna', 'Vilnius', 'Waisenhaus in Berlin und Halle', 'Wallach, David', 'Wallach, Demoiselle', 'Wallach, Madame', 'Wallenrodtsche Bibliothek', 'Waltsch, Shimeon', 'Waltsch, Shimeon - ולטש, שמעון', 'Wamburg', 'Wappler, Christian Friedrich (Buchhändler)', 'Warburg, Aron Levin', 'Warburg, Meyer', 'Warsaw', 'Wasiliszki', 'Weikersheim', 'Weil, Abraham (Oberrabbiner)', 'Wertheim, Charlotte', 'Wertheimer, Samuel', 'Wertheimstein, Hermann von (Edler von)', 'Wertheimstein, Josef (Edler von Wertheimstein)', 'Wertheimstein, Lazar (Edler von Wertheimstein)', 'Wessely, Hartwig', 'Wessely, Hartwig - וייזל, נפתלי הרץ', 'Wessely, Joel', 'Wetzlar, Gottschalck', 'Wien', 'Wiener, Isaac', 'Wilhelm, Wertheimstein (Edler von Wertheimstein)', 'Winck, Wolff', 'Wittersheim d. Ä.', 'Wohl, Levi', 'Wohl, Levi - וול, יהודה ליב בן צבי הירש', 'Wolf, Elcan Isaac', 'Wolf, Elcan Isaac - וולף, אלקן יצחק', 'Wolf, Joseph', 'Wolf, Joseph - וולף, יוסף', 'Wolfsohn', 'Wolfsohn', 'Wolfsohn-Halle, Aron', 'Wolfsohn-Halle, Aron - וולפסון, אהרון', 'Worms', 'Worms, Ascher Anschel', 'Worms, Ascher Anschel - וורמס, אנשיל', 'Worms, Wolff', 'Worms, Wolff', 'Worms, Wolff - וורמס, וולף', 'Wriezen', 'Wulff, Abraham', 'Wulff, Heymann', 'Wulff, Joseph', 'Würzburg', 'Zacharias', 'Zacharias, Moses', 'Zacharias, Simon', 'Zamosc', 'Zell', 'Zhovkva', 'Zirndorffer, Isaac', 'Zirndorffer, Isaac David', 'Zirndorffer, Isaac David - צירנדורף, איצק', 'Zolochiv', 'Zürich', 'Öttinger, Moses', "א' ליפפמאן", "אארי' ליבמן מהו' וואלף", 'אב"ד ור"מ דק"ק ל"ב בנימין', 'אב"ד ור"מ דק"ק פפ"דא שאול', 'אבהרם בכ"ה איסרל זלדין', 'אביגדור', 'אביגדור ברעסלוי', 'אביגדור תאומים', 'אבלי הארוויטץ', 'אבן סינא, אלחסין בן עבדאללה', 'אבן עזרא, אברהם', 'אבן תבון, יהודה בן שאול', 'אבערראבבינער', "אבראהאם אי' ברילל", 'אבראהאם בלאך', 'אברהם', 'אברהם אבלי בן ירמיה', 'אברהם אבן', 'אברהם אבן-עזרא', 'אברהם אדערפעלד', 'אברהם אלחנן', 'אברהם אפנער', 'אברהם ב"ר אשר', 'אברהם ב"ר צבי הירש', 'אברהם באנו', "אברהם בהגאון מוה' גדלי'", 'אברהם בומבורג', 'אברהם בורגפרעפיך', 'אברהם בידשאף', 'אברהם בן אליהו', 'אברהם בן אריה ליב', 'אברהם בן לא"א כהן מביסטריץ', 'אברהם בן מודל, מאטינגן', 'אברהם בר"א פל', 'אברהם בר"בג', 'אברהם בר"ה', 'אברהם בר"ה בר"נ', 'אברהם בר"ה ר"נ', 'אברהם בר"י', 'אברהם בר"י פרץ', 'אברהם בר"ל ה"ש', 'אברהם בר"מ פ"ד', 'אברהם בר"מ פ"ר', 'אברהם בר"נ', 'אברהם בר"נ ה"ס', 'אברהם בר"נ ה"ש', 'אברהם בר"פ כ"ץ', 'אברהם ברנ"ז', 'אברהם ברעזכין (בחורי חמד)', 'אברהם גאטטשטיין', 'אברהם גאנץ', 'אברהם דאנציגר', 'אברהם היינערסדארף', 'אברהם הייצפעלד', 'אברהם וויינשענק', 'אברהם יחזקיה בש"ן', 'אברהם יקותיאל', 'אברהם מלנצברג', 'אברהם מרדכי', 'אברהם מרדכי דאלקוי', 'אברהם סג"ל מחעלמא', 'אברהם פאלענטין', 'אברהם פאפר', 'אברהם פרידלענדר', 'אברהם פרץ', 'אברהם צבי', 'אברהם צילץ', 'אברהם קויפמן וואהל', 'אברהם קצנאלין בוגין', 'אברהם שטיינמאן', 'אברהם שלאחוב', 'אברהם שמינים פיריירה', 'אברהםבן פו"מ יעקב צבי', 'אברם בעכר', 'אדאם טשארטאריסקי', 'אהרן אפנהיים בל"ב', 'אהרן ב"ר משה מגזע צבי ראב"ד בק"ק ברלין', 'אהרן באהן', 'אהרן בן יוסף אהרן הלוי הורוויץ', 'אהרן בער יאס', 'אהרן בר"ס בר"נ', 'אהרן ברא"כ מפ"ד', 'אהרן גאלדשמיד', 'אהרן דעסויא', 'אהרן הלוי הורוויץ', 'אהרן הלוי העליר', 'אהרן ווייס', 'אהרן זלמן מרגליות', 'אהרן יורש', 'אהרן ליפמאן', 'אהרן סג"ל דרעטניץ', 'אהרן פרענקל', 'אהרן צבי', 'אהרן ריינא', 'אהרן שטראסבורג', 'אהרן שמעון בר"מ', 'אהרן שפיץ', 'אופנהיים, מענדל', 'אורי מורפורגי', 'אורי פיבוש בן אריה ליב', "אי' ברונשטיין", "אי' לעוו האפמאן", 'איגר, מאיר', 'איזאק בעער', 'איזאק ווערטהיימער', 'איזאק יאנאס', 'איזאק יאנעס', 'איזאק עסטרייכער', 'איזאק פראנקענשטיין', 'איזאק פרייאזאך', 'איזק העלפט', 'איזראעל צאפפערט', 'איזראעל קעניגסבערגער', 'אייזאק האצפעלד', 'אייזק בר"נ', 'אייזק בר"נ ה"ש', 'אייזק דעסויא', 'אייזק ה"ש', 'אייזק זאקסעל', 'אייזק כהנא פיוואני', 'אייזק מרדכי איידלין', 'אייזק פאצדאם', 'אייזק צהנא פיוואני', 'אייכל, יצחק', 'איסר בנה\' סיני כ"ץ מק"ק זאלשיץ', 'איסר ה"ב', 'איסר קאטבוס', 'איסר קאטנוס', 'איסרל, ישראל', 'איסרלי איגלהיימר', 'איסרלי היילברונר, פ"ומ', 'איצק  צילך בק"ב', 'איצק אולמאן', 'איצק בן משה שלעזינגער', 'איצק בן שמשון ווערטהיים', 'איצק בר"י ווערטהיימר', 'איצק בר"ל זאקס', 'איצק בר"מ ווערטהיימר', 'איצק העלפט', 'איצק העסי', 'איצק לאפפע', 'איצק ליב סג"ל', 'איצק ניימעדל', 'איצק סאבאטקא', 'איצק עלקש', 'איצק פ"ד', 'איצק פליס', 'איצק ראוויטש', 'אלחנן ברי"ל', 'אלי לעוורדן', 'אלי פ"ל', "אלי'", "אלי' אורשל", 'אלי\' ב"ר דניאל יפה', 'אלי\' במהר"ר מן', 'אלי\' בן יוסף ז"ל אב"ד דק"ק קעמפנא', 'אלי\' ברי"ץ פרידבערג', "אלי' העכים (העכים, אליהו)", "אלי' ווערטהיים", "אלי' חיות", "אלי' טארנער", "אלי' טורלוך", "אלי' לוי", 'אלי\' מ"ב בפ"פ דאדר', "אלי' מפוזנא", "אלי' מפוזנא (הצעיר)", "אלי' רויזכין", 'אליהו בן רפאל שלמה, הלוי', 'אליהו בר"מ', 'אליהו מורפורגו', 'אליעזר בהרב ה"ג מה"ר"א', 'אליעזר בן יצחק', 'אליעזר בן שמואל זנוויל ברוק', 'אליעזר פלעקלס', 'אלכסנדר', 'אלכסנדר זיסל הלוי', 'אלכסנדר סענדר מרגלית', 'אלעזר בער פורכהיים', 'אלעזר פלעקלש', 'אלעזר קאליר', "אלקנה מאיר בן מהו' בצלאל", 'אמסאן היימאן', 'אמרספורט, בנימין', 'אמשניץ', 'אנונימי', 'אנריאיטה בת דניאל יפה', 'אנשיל ב"ר יוסף ליב נייאבורג', 'אנשיל גונציהויזען', 'אנשיל עשווא', 'אנשל לוי', 'אסף בן ברכיהו', 'אעבל פ"ד', 'אפען', 'אפרים בר"פ', 'אפרים ברי"ל', 'אפרים מדעסא', 'אפרים פישל', 'אראן פאלאק', 'אראן פריעדלענדער', 'ארהן בער קוטן פלון', "ארי' ליב", "ארי' ליב ברעסלא", 'אריה ליב', 'אריה ליבש', 'ארנאלד געץ', 'ארנאלד ענגעל', 'ארענסוואלד, ראובן', 'ארענשטיין, נתן', 'אשור', 'אשר אנשיל שאטלענדר', 'אשר בר"א אמבפארט', 'אשר שעניפליס', 'באהן, אהרון', 'באהן, אהרן', 'באמבארג, משה', 'בארוך ראטה', 'בובס פליט', 'בונם בר"ד פ"ל', 'בונם ברא"ד', 'בונם קוילא', 'בוקי, אליהו', 'בי, ישראל', 'בילפעלד', 'בינגר, חיים', 'בישיץ, ליזר', 'בלומאן', 'בלימכה פרידלענדר', 'בנימין איש רומי', 'בנימין אשכנזי', 'בנימין בארמאפאר', 'בנימין בערנשטיין', 'בנימין בר"פ', 'בנימין האלברשטאט', 'בנימין כ"ץ', 'בנימין משה מעלי', 'בנימין פולדא בשוועד', 'בנימן ה"ש', 'בנעט, מרדכי', 'בעללערמאן', 'בענדיט וועזל', 'בענדיט יורש', 'בעניאמין גרינבוים', 'בענעדיקט גאמפערץ', 'בעער הערצעל', 'בער אורשל', 'בער אפפענהיים', 'בער בן פ"ומ ר"מ גוסדארף', 'בער האן', 'בער האפנהיים', 'בער ווירצבורג', 'בער לעמליין', 'בער משפליס', 'בער פליס', 'בער שלענקער', 'בער, יודא בר"ה', 'בעריש במוהר"ר משה', 'בעריש גינסבערג', 'בערמן ב"ר זעליגמן מק"ב', 'בערמן פ"ל בק"ב', 'בערנארד עדלער פאן עשקלעס', 'בערנהארד, מאיר', 'בערענד פרענקל', 'בערענס בר"יל שווייצר', "בצאל' ברנדס (דיין)", 'בצלאל ב"ר זלמן', 'בראד, משה', 'בראדינבורג, זנוויל', 'ברוך ב"ר שמחה צעל', 'ברוך בן בהרר מאיר', 'ברוך בן צבי הירש', 'ברוך בערלסהיימער', 'ברוך בר שמואל', 'ברוך גינסבערג', 'ברוך יונה ייסלש (רופא)', 'ברוך מק"ב', 'ברוך משלאחוב', 'ברוך עשווא', 'ברוך פרענקל (בחורי חמד)', 'ברוך קעסלין', "ברונשוויג, לאזי בן פו''מ ליב", 'ברונשוויג, ליב', 'ברונשוויג, מאנש', 'ברי"ל, אלחנן', 'ברידער פייט', 'בריחמי, משה', 'ברימטי, משה', 'ברלין, אנשיל', 'ברסלא (בנו של "הצדיק המנוח הגאון בענדיט"), ראובן בן שמואל', 'ברסלאו, מנדל', 'ברעסלויא, ראובן בר"ש', 'בשוויץ, ברוך', 'גאנו, אברהם', 'גבריאל בן נטע אוטיץ', 'גבריאל בעללאק', 'גבריאל גבר', 'גבריאל געזור', 'גבריאל דריזן בל"ב', 'גבריאל נאטהאן וועהלע', 'גבריאל פרענקל פרימוס', "גדלי' זיסקינד", 'גדליה בן משה', 'גדליה מאברזיטצקא', 'גומפל פאצדאם', 'גומפל, מרדכי', 'גומפריך עטטנהיים, פ"ומ', 'גוסטאף השלישי', 'גס, משה ב"ר בערמן', 'געבר, אייזק', 'געבר, דניאל', 'געבר, הירש', 'געץ אמשטרדאם', "געץ ג' אופפעהיים", 'געץ לעווי', 'גערסאן גאלדבערגער', "גראף וויקטאר פאוולאוויטש קאטשוביי'", 'גרונדשטין, יעקב לוי', 'גרשון ברוינשווייג', 'גרשון חפ"קק פרנקפורט דאדר', 'גרשון ניימאן', 'דאוויד איזאק ארנשטיינער', 'דאוויד האאז', 'דאוויד ווארטפעלד', 'דאוויד רעכטניטץ', 'דאקטאר שענעמאן', 'דובער בן אביגדור גצבורג/גינצבורג', 'דוד', 'דוד אופנהייימר', 'דוד ב"ה פייבש שלאס פ"פ', 'דוד ב"ר הלל פ"ש', 'דוד בן בענדיט ווינג', 'דוד בן נפתלי הירש', 'דוד בן רפאל מילדולה', 'דוד בר הלל פ"ש', 'דוד בר"א בר"פ', 'דוד בר"ל גאלדשטיקר', 'דוד היימאן', 'דוד הכהן די אזיוידו', 'דוד ווערטהיים', 'דוד ווערטהיימער', 'דוד ווערטהיימר', 'דוד זאקס', 'דוד טעבל מבראד', 'דוד כהן', 'דוד לאנדאה', 'דוד מברלין', 'דוד סמטור', 'דוד פ"ל', 'דוד פערנבאך', 'דוד פראנצאז', 'דוד פרידלנדר', 'דוד שלעזינגר בה"ב', 'דיהרנפורט', 'דייני פפ"דא', 'דיניויץ', 'דניאל בן דוד הכהן', 'דניאל בר"ש סגל', 'דניאל ברלין', 'דניאל לעוויע', 'דניאל עלקש', 'האבער', 'האללענדר', 'האללענדר, שמעון', 'האמבורג, איסר', 'האן, משה בר"י', 'האפגאלדשטיקר', 'הומברג, איסר', 'הורוויץ, פנחס אליהו', 'הורוויץ, שעפטיל', 'היימאן יאקאביא', 'היימאן מאזעס', 'היימאן פינקוס', 'היינריך הענאך', 'היינריך לאקענבאכער', 'הייצפעלד, זנוויל', 'הילל ברי\' דרב שמואל ספרא דק"ק טיקטין והגליל', 'הילל זילבערשטיין', "הינדא פרידלענדר (אשר ר' חיים ליב פרידלענדר)", 'הירץ', 'הירץ בינג', 'הירץ בער', 'הירץ בר"מ', 'הירץ ברוכזאל', 'הירץ האלבערשטאם', 'הירץ מורא כ"ץ', 'הירץ שלעזינגר', 'הירץ, פ"ומ', 'הירש ב"ר מענדל ק"ל בק"ב', 'הירש בארוך', 'הירש ביק', 'הירש בן הרב מאלעקסניץ', 'הירש בן פ"ומ ר"י ק"וו ז"ל', 'הירש בערן שטיין', 'הירש בר"א מדריזן', 'הירש בר"י דאנציג', 'הירש בר"ם פרענקל', 'הירש בר"נ', 'הירש בר"ק שטרעליץ', "הירש בר''נ", 'הירש ברוו"הש', 'הירש גוטרבאק', 'הירש גונצענהויזן', 'הירש האלבערשטאם', 'הירש האנק', 'הירש הערפורט', 'הירש ווייל', 'הירש זאקס', 'הירש לאנדויא', 'הירש מינדן בק"ב', 'הירש צומעלס', 'הירש קוא (בחורי חמד)', 'הירש קלמן מא"ד', 'הירש קעסלין בה"ש', 'הירש קרא', 'הירש רעכעלס', 'הירש שטראלזונד', 'הירש, איצק ליב,מנדלסון, משה', 'הכהן, נפתלי', 'הכים, אליהו בן חיים', 'הכים, משה בן חיים', 'הלברשטט, וואלף', 'העלפט, איזק', 'העלפט, געטשליק', 'העלפט, משה', 'הענאך ב"ר משה ליב', 'הענוך קוטן פלון', 'הענוך ראקצין', 'הענלי בכ"ה ר"י באטיוויס', 'הענלי בן שמעון אולמא', 'הענשיל (Dr. med.)', 'העסיל משווערין', 'הערמאן שטראסער', 'הערץ עטטינגער', 'הערר באראן בער אשקלאס', 'הערר באראן נתן ארנשטיין', 'הערשל קאליש', "הק' ליזר גרין הוט", 'הקלירי, שמשון', 'הרש שווייצר', 'הרש"בם', 'ואקס', "וו' ע' פ' א'", 'וואלף אויערבאך', 'וואלף ב"ר בערמן פ"ל', 'וואלף באטיוויס', 'וואלף באמבערג בק"ב', 'וואלף בב"ה ר"י באטיוויס', 'וואלף בן הריין ר"ש ענדל', 'וואלף בענעדיקט מאנדעל', 'וואלף בערן שטיין', 'וואלף בר יעקב צבי', 'וואלף בר"ז מש"ב', 'וואלף בר"י', 'וואלף בר"ש סג"ל', "וואלף ברעטצפ'עלר", 'וואלף גדלש', 'וואלף האללי', 'וואלף המבורג, גד"תת', 'וואלף הערצפעלד', 'וואלף זאקסעל', 'וואלף יאעל פאצדאמער', 'וואלף יוליץ', 'וואלף ליכטנשטאט', 'וואלף לעויזאן', 'וואלף מאשלש', "וואלף מזלאטאווי'", 'וואלף נאסויא', 'וואלף נייאבורג, פ"ומ', 'וואלף עטטלינגען', 'וואלף פ"ל בק"ב ג"ס', 'וואלף פולאיי', 'וואלף פירד', 'וואלף פרידבערג', 'וואלף צבי', 'ווייזל, אהרון', 'ווייזל, מאיר בר"ל', 'ווייזעלס עללינגען', 'ווייל, מאיר שמעון', 'וולף, יוסף', 'ווערדין', 'ווערטהיים, זעליגמן', 'ווערסש, עזריאל', 'ויעלקאשט', 'ולאטאווי', 'זאב וואלף', 'זאב וואלף גאלדענבערג', 'זאמחוב', 'זאקס', 'זאקס, ישראל', 'זאקס, שלמה', 'זונדל ב"ר הירש', 'זילץ, חיים', 'זימל גונציהויזען', 'זימן אייזק עסטענפעלד', 'זיסל אסטראדע בה"ש', 'זיסקינד קאליר', "זכרי'", 'זכרי\' ב"ר פייטל', 'זכרי\' בר"פ קליף ז"ל', "זכרי' מענדיל", 'זכרי\' מענדל ברנ"פ', 'זלמונא פיורדא', 'זלמן בן משה ווינג', 'זלמן בעער', 'זלמן דעסויא', 'זלמן דש"ט', 'זלמן הירש', 'זלמן הירש ב"ר יוסף ליב נייאבורג', 'זלמן הלוי בן רפאל', 'זלמן הצפעלד', 'זלמן טעדעסקא', 'זלמן ליב אקס', 'זלמן ליסא בפ"ד', 'זלמן פ"ד', 'זלמן פרידבערג', 'זלמן ק"ב', 'זלמן קאסל בק"ב', 'זלמן שווייצר', 'זלמן שרד"פ', 'זנוויל אשר, פ"ומ', 'זנוויל בר"א פ"פ', 'זנוויל בר"ה בר"ן', 'זנוויל בר"נ', 'זנוויל בר"נ באמבורג', "זנוויל בר''נ", 'זנוויל הכהן', 'זנוויל וויינשענק', 'זנוויל נייא גאס', 'זנוויל נייאגאס', 'זנוויל עטהויסען', 'זנוויל פ"ל בק"ב', 'זנוויל פייאגס', 'זעליג בער הארשיטץ', 'זעליג ליגניץ', 'זעליג ליפשיץ בק"ב', 'זעליג שטיינבאך', 'זעליגמן אולמאן', 'זעליגמן בר"י בק"ב', 'זעליגמן דיטלבאך', 'זעליגמן עטטלינגען, פ"ומ', 'זעקל רעגענסבורג', 'זק"ש, יואל בן יקותיאל', "זרחי' נ' מסעוד איש איטליא", 'חביב, משה בן שם טוב', 'חיאן, צדוק', 'חיוס, טיבאל', 'חיט, משה אברהם בן ראובן', 'חיים', 'חיים (חייקא)', 'חיים אדלער', 'חיים ב"ר אפרים בר"מ', 'חיים ב"ר הירץ', 'חיים בן ר\' יוסף בר"פ ז"ל', 'חיים בר יוסף סופר', 'חיים בר"א בר"פ', 'חיים בר"א יורש', 'חיים בר"י סופר', 'חיים ברעזכין פרימוס דמדינה', 'חיים האלבערשטאם', 'חיים לאנצבורג', 'חיים מארקברייט', 'חיים מצאנז', 'חיים משה מאשלש', "חיים נחמי' מזרחי", 'חיים ראשמין (בחורי חמד)', 'חלם, שלמה בן משה', 'חלפן, דניאל בר"ש', 'חלפן, שלמה', 'חנה פיוואני', 'חנוך הענך במהורר שמואל זצ"ל שיק', "ט' שטיינסבערג", 'טהעאדאר, דוד', "טובי'", 'טובי\' בעז זצ"ל', 'טויסק, ישראל', 'טורהאוויץ', 'טעבלי ב"ר קאפיל ריס', 'טעבלי בר"י מקראסן', 'טעבלי העס', 'טעבלי פ"ד', 'טריידעל משוורין', 'טשערנאוויץ', 'י"ט בנעט', 'יאאכים היים', 'יאאכים הערש', 'יאאכים וויינמייער', 'יאול יאכימסטהאל', 'יאזעף אפפנהיים', 'יאזעף ברוך', 'יאזעף גרינבוים', 'יאזעף הירש', 'יאזעף הירשפעלד', 'יאזעף ווייסענבערג', 'יאזעף לאצארוס לעווי', 'יאזעף לעווי', 'יאזעף מאזעס קאהן', 'יאזעף מארקברייטער', 'יאזעף קינדערפריינד', 'יאנאטהאן הארשיטצער', 'יאנאס מיללער', 'יאנאס פירטה', 'יאנוב, שבתי בן דוד יאנוב, שבתי בן דוד', 'יאסעף ליידעסדארפער', 'יאסעף לעהמאן', 'יאסעף שטרים', 'יאעל בק"ב', 'יאקאב אדלער', 'יאקאב אפפענהיים', 'יאקאב גאטטליעב', 'יאקאב ווערטהיים (Dr. jur.)', 'יאקאב ליידענסדארף', 'יאקאב סאקידלאוו', "יאקאב ק' סוידעק", 'יאקב ב"ר יהודא ליב ב"ר זרח סג"ג', 'יאקב באכי בפ"ד', 'יאקב בן דניאל בלאך', 'יאקב בר יוזפה', 'יאקב בר"ש', 'יאקב ברא"ד', 'יאקב ז"ב', 'יאקב זולצבאך', 'יאקב פעסילש, פ"וג', 'יאקב צוקרמאן', 'יאקב צילך', 'יאקב שלעזינגר בה"ב', "יהוד' ליב", 'יהודא הכהן מיערסלוב בן יעקב', 'יהודא ליב בהגאון משנה דר"ע', 'יהודא ליב בן שניאור', 'יהודא ליב סג"ל', 'יהודא ס"גל לנדא', 'יהודא ס"גל נאטנזאהן', 'יהודה ליב בן משה מהמבורג', 'יהודה ליב בן משה, מהמבורג', 'יהודה ליב מעזריטש', 'יהודה ליב פ"ב', 'יהושיע הערצבערג', 'יהושיע ס"גל נאטנזאהן', 'יהושיע שיפער', 'יהושע בר"י', 'יהושע מליסא', 'יואל במהר"ר יקותיאל מגלוגא', 'יואל בר"ל פרענקיל', 'יואל האללי', 'יואל היכבורג', 'יואל יפה', 'יואל מגלוגא', 'יואל נויאן', 'יודא ב"בה ר"ל, ר"ק', 'יודא בערנבורג', 'יודא ברא מהמבורג', 'יודל בר"ל', 'יוזיל ווערטהיים', 'יוזל ווערטהיימר', 'יוזל נחמן', 'יוזל שווא', 'יוזעפאף', 'יוזפא געטינג בה"ב', 'יוזפא דעטמאלד', 'יוזפא לעווי', 'יוזפא מינדן', 'יוזפא ש"ל', 'יוחנן בה"רר שלמה סלמן ס"ט', 'יונה גלויגא', 'יוסל האללי', 'יוסף', 'יוסף אמשטערדאם', 'יוסף אשר לעמיל ב"ה שמעון מ"ץ', 'יוסף ב"ר הירש בר"נ', 'יוסף בהג"און אב"ד נ"רו', 'יוסף במהור"א', 'יוסף בן אברהם', 'יוסף בן פ"ומ ר\' לעמלי כהן', 'יוסף בע"מ פורת יוסף', 'יוסף בר"אצ', 'יוסף בר"ה בר"ן', 'יוסף בר"ל', 'יוסף בר"ם פרעגר', "יוסף בר''ש בר''א", 'יוסף ברוך', 'יוסף דעמוטה', 'יוסף דעסויא אצל רא"ד', 'יוסף האללי', 'יוסף הירצלס', 'יוסף חו"בק', 'יוסף יוזיל צ"ד', 'יוסף יוזפא לו האל', 'יוסף לוצאטו איש איטליא מדי התמהמתי פה לונדן', 'יוסף ליב בראנדיס', 'יוסף מייער', 'יוסף מפיעטרקוב', 'יוסף משולם פייביל בן אברהם אבא', 'יוסף משטיין הרט', 'יוסף משפוליס', 'יוסף נייאמארק בק"ב', 'יוסף עטטלינגען', 'יוסף עשווא', 'יוסף פליס', 'יוסף צבי', 'יוסף קאהן', 'יוסף ראטיבאר', 'יוסף שאצקיש', 'יוסף שטעטע, פ"ומ', 'יוסף שלמה, מליסא', 'יורש, אהרון', 'יורש, בענדיט', 'יחזקאל הלוי לנדא', 'יחזקאל לנדא', 'יחיאל ב"ר הירש בק"ב', 'יחיאל מיכל', 'יחיאל מיכל מ"ס', 'יחיאל מיכל פרענקעל ענדר', 'יחיאל מק"ב', 'יחיאל קאפנהאגן', 'יטלה מב"ת [וייזל]', 'יעקב א"ש פייבל', 'יעקב אברהם בשן', 'יעקב אללענדארף', 'יעקב ב"ה יו"טב', 'יעקב ב"ה מאיר', 'יעקב בה"רר יוספא', 'יעקב בהרב ה"ג מ"הר"א', "יעקב בהרב מהו' יעקב משה", 'יעקב בלאך', 'יעקב בן גדליה', 'יעקב בן יצחק פלעקלש', 'יעקב בן ישראל ביא', "יעקב בן ר' יוזפא ראנינבורג", 'יעקב בער כ"ץ', 'יעקב בעריש בערנשטיין', 'יעקב בר אורי הלוי', 'יעקב בר"א פ"ה', 'יעקב בר"ד יפה', 'יעקב בר"י', 'יעקב בר"יס בש"רל', 'יעקב בר"ק כ"ץ', 'יעקב בר"ש', 'יעקב ברא"פ', 'יעקב גלוגא', 'יעקב האן', 'יעקב האנק', 'יעקב הארן', 'יעקב הירש קאסט', 'יעקב וואלף מקאזיבע', 'יעקב וועליש', 'יעקב חי חפץ', 'יעקב חיים בן יהושע הכהן', 'יעקב לוי', 'יעקב ליב פורכהיים, גב"צר', 'יעקב ליב פרענקל', 'יעקב לעווי', 'יעקב לעווענשטיין', 'יעקב משה בן שאול', 'יעקב משה שאול', 'יעקב ס"גל נאטנזאהן', 'יעקב סופר', 'יעקב עמדן', 'יעקב פפארצהיים', 'יעקב צבי', 'יעקב קוסיל', 'יעקב קראניק', 'יעקב שאף', 'יעקב ששפורטס', 'יעקבקא הלוי לנדא', 'יעקוב א בן הגאון יחזקאל אב"ד דק"ק פראג', 'יעקעל בעכער', 'יפה, בונם בן פו"מ דניאל', 'יפה, משה בן פו"מ דניאל', 'יצחק אברהם הכהן', "יצחק אייז' היילפרן", "יצחק אייזק בן כה' מרדכי", 'יצחק אייזק ברמ"ס', 'יצחק איצק פרידלנד', 'יצחק בהרב ה"ה מוהר"ר מרדכי הלוי זצ"ל מלבוב', 'יצחק בלאך', 'יצחק במו\' משה כ"ץ', 'יצחק בר"א', 'יצחק הישראלי', 'יצחק הלוי מלבוב', 'יצחק זאבי', "יצחק חיים ן' דנא די בריטו", 'יצחק חר"מ איגר', 'יצחק מרפורגו', 'ירוחם איש באהר', 'ירוחם בן ישכר בער מלבוב', 'ירמי\' בר"י', "ירמי' דוסענזי", "ירמי' מהלברשטט", "ירמי' רופא", "יש' בער מגזע צבי", "ישעי' בראנדיס", "ישעי' לוי", "ישעי' ליב", "ישעי' פאלאק", 'ישראל', 'ישראל אולמן', 'ישראל בן חיים', 'ישראל בן משה, מברסלאו', 'ישראל בער', 'ישראל בערינשטיין', 'ישראל בר"י בה"ש', 'ישראל חיים דייטש', 'ישראל ליב שולהאף', 'ישראל פראנק', 'יששכר בער וויזל', 'יששכר בער מגזע צבי', 'יששכר מפ"ד', 'כהן ק"ב, הירש', 'כהן, בער אשקלוא', 'כהן, הירש', 'כהן, זלמן', 'כהן, ירחמיאל פלק בן נתן', 'כהן, ליב', 'כץ', 'כץ, הירץ', 'כץ, ליב', "ל' לעסינג (Dr. med.)", 'לאזער ביעדערמאן', 'לאמניך, איזק', 'לאמניץ, סענדר', 'לאצאר ברייטלענפעלד', 'לאצאר טרייפוס', 'לביאה האלברשטאט', 'לואיס עפפינגער', 'לוונשטאם, שאול בן אריה ליב', 'לוי, יהודה', 'לוי, יעקב', 'לוי, שמואל', 'לוין, צבי הירש', 'לוצטו, משה חיים', "ליאון ר' ראמאניני", 'ליב במהר"ז סג"ל', "ליב בן מהו' זאב וואלוף", 'ליב בן פ"ומ ר\' זכרי\' קליף', 'ליב בר"ם אפפענהיימער', 'ליב בר"מ', 'ליב בר"נ', 'ליב בר"פ כ"ץ', 'ליב דאהם', 'ליב דרעזדען', 'ליב דרעזן מה"ש', 'ליב הארצפעלד', 'ליב הומבורג', 'ליב הנובר סג"ל', 'ליב הערלסהיים', 'ליב מינדן', 'ליב קראנקע', 'ליבש אברמאוויץ', 'ליבש בערינשטיין', 'ליבש פשעווערסקער', 'ליזר באמבורג', 'ליזר בישיטץ', 'ליזר בר"ל פרענקל', 'ליזר בר"ש פרעגר', 'ליזר נייאגאם', 'ליזר קרא', 'ליזר קראטשין', 'לימא רעננער', 'ליפמאן אלעקסאנדר', 'ליפמן אויבינבאכר', 'ליפמן בערלין (Hofrat)', 'ליפמן בר"ה ריס', 'ליפמן בר"מ', 'ליפמן בר"מ לוי', 'ליפמן פאהן', 'ליפמן ר"ק', 'ליפמן שטורם', 'לנדסבערג, חיים', 'לעאנהערד געץ', 'לעאפאלד, עדלער פאן הערץ', 'לעוו באבעללע', 'לעווינגער', 'לעווענטהאל', 'לעזער קליינבערג', 'לעזער ראטטענבערג', 'לעטשוב=לאצוב', 'לעמלי בן פ"ומ ר"מ ג"ר', 'לעקיש וורבורג', 'לעקש', 'מ"מ אברהם שול הויף מ"ס', "מ' אי' ליידעסדארף", "מ' ג' פירטה", "מ' ל' גאלדשמיעד", "מ' עטטינגער", 'מאדאם קילא אלמנת ר\' יקותיאל פו"מ', 'מאדאם קרינלה אלמנת ר"י אמספארט', 'מאדאם רייצל יאעל', 'מאדאם שארלאטטע דוקאס', 'מאזעס גרינבוים', 'מאזעס טויבער', 'מאזעס מאהל (Dr. med.)', 'מאזעס קאבלענצער', 'מאזעס קאסאוויטץ קאפפעלמאן', 'מאזעס שטראנע', 'מאי בער', 'מאייועס בראדא', 'מאייער בייאפוס', "מאייער ס' רעגענסבורגער", 'מאיר אויערבאך', 'מאיר איגיר', 'מאיר איגר', 'מאיר אסטערזעטצער', 'מאיר ב"ה', 'מאיר בישיטץ', 'מאיר בן כהר"ר שמואל פלקלש', 'מאיר בן שמואל פלקלש', 'מאיר בער', 'מאיר בעריל', 'מאיר בערנהארד בק"ב', 'מאיר בר"ד שוחט', 'מאיר בר"י ג"ש מש"ל', 'מאיר הויזן', 'מאיר ווארבורג', 'מאיר וועליוא', 'מאיר חיות', 'מאיר מ"ס', 'מאיר מטריאר', 'מאיר נאדלער', 'מאיר סארלוויל', 'מאיר סופקא', 'מאיר פ"ל', 'מאיר פיורדא', 'מאיר פירדא', 'מאיר ראובנס', 'מאיר ראוויץ', 'מאיר ראקנין', 'מאיר שלעזינגר', 'מאנדעל סאללאן', 'מאניס בר"א גבר', 'מאנלי פ"ד', 'מאקסמיליאן טרעביטש', 'מאקסעל אשער', 'מאריץ קאבלענצער', 'מארקוס אפענהיימער', 'מארקוס באסקאוויטץ', 'מארקוס ביילל', 'מארקוס זעליגסבערג', 'מארקוס טורנויער, ר"בד ור"הק', 'מארקוס ליידעסדארפער', 'מארקוס סוידעק', 'מארקוס ענגעלענדער', 'מארקוס פפייפער', 'מארקוס פרענקעל', 'מארקוס שטראסער', 'מארקוס שלעזינגער', 'מארקס הירש האנויא', 'מארקס זאלמאן גאלדשטיקר', 'מודינה, דוד בן', 'מודינה, דוד בן-ציון בן אברהם', 'מוהר, יוזל', 'מוזסזון, אהרן בן משה מגזע צבי מוזסזון, אהרן בן משה מגזע צבי', 'מור (מוהר), יוסף שמעון', 'מיחאל באבראווסקי', 'מיינסטר בעק', 'מיכאל בלא"א המנוח מו"ה זנוויל בכרך', 'מיכאל חיים', 'מיכאל חיים מעזחאד', 'מיכאל חר"ג', 'מיכאל יאווירעווער', 'מיכאל יוזעפא', 'מיכאל ליסא', 'מיכאל פרייהאן', 'מיכאל שמעון מייא', 'מיכל וואלף', 'מיכל טייגער', 'מיכל ליבנויער', 'מיכל מ"ס', 'מיכל פ"ל מק"ב', 'מיכל שלעזינגר', 'מיכעל סימאנס', 'מילבערג', 'מינדין, יוזפא', 'מינדן, יהודה ליב בן יואל', 'מיענדעל רעננער', 'מיץ', 'מלאכת שבא', 'מנדל אפנהיים', 'מנחם בן אברהם פרפיניאן,סטנוב, יצחק', 'מנחם מן', 'מנחם עמנואל וייזל', 'מנשה בן יוסף,מאיליא', 'מעזריטש, יואל', 'מענדל [אביו של מנדלסון (פרנקפורט), משה]', 'מענדל אפנהיים בק"ב', 'מענדל בר"א', 'מענדל בר"א בק"ב', 'מענדל בר"י', 'מענדל בר"י כ"ץ', 'מענדל בר"ן', 'מענדל ברעסלוי בק"ב', 'מענדל ווערטהיימר', 'מענדל זעללער', 'מענדל ליידסדורף', 'מענדל עטטינגר', 'מענדל שפירא', 'מענדלסזאהן, יוסף', 'מענץ, אברהם יוסף', 'מענץ, אברהם יוסף בן שמעון וואלף', 'מרגליות, יהודה ליב בן אשר זליג', 'מרדכי', 'מרדכי איידלין', 'מרדכי ב"מ שלום', 'מרדכי ב"ר יואל כ"ץ בפד"א', 'מרדכי בורמט', 'מרדכי בלאך', 'מרדכי במהורר יעקב ז"ל', 'מרדכי בן יצחק, הלוי', 'מרדכי בר"י שלעזינגר בה"ב', 'מרדכי בר"ש', 'מרדכי האדאראווער', 'מרדכי הירץ', 'מרדכי וועלי בק"ב', 'מרדכי זאב', 'מרדכי לוי', 'מרדכי לעוונשטאם', 'מרדכי מאוש גואהלענער', 'מרדכי מגלוסק', 'מרדכי מייזיל', 'מרדכי פערלהעפטער', 'מרדכי צבי הירש ביק', 'מרדכי רופא', 'מרים', "מרים איציג (אשת ר' דניאל יפה)", 'מרש, חיים בר"א', 'משה איסר אבאמארע', 'משה אפנהיים בק"ב', 'משה ב"ר ליזר', 'משה ב"רר א"ר', 'משה בורג', 'משה ביג', 'משה בישיטץ', "משה בן מהו' יודא ליב", 'משה בן שמואל כץ ריטשוואל', 'משה בר"א צבי', 'משה בר"ד פ"ל', 'משה בר"ד פ"ל משה בר"ד פ"ל', 'משה בר"ט שמש בא"ד', 'משה בר"י אולמן', 'משה בר"ל קאסל מק"ב', 'משה בר"מ ה"ב', 'משה בר"ן', 'משה גונצנהויזן', 'משה גוסדארף, פ"ומ', 'משה ה"ש', 'משה הירש קעניגסהאף', 'משה העלפט', 'משה וויזיל', 'משה זאללשין', 'משה זלאטווי', 'משה חלפן סג"ל', "משה טובי'", 'משה לאפיטינער', 'משה לוי משאנדרשלעבין', 'משה ליב', 'משה ליב פוקס', 'משה ליב צורף (בחורי חמד)', 'משה ליסא', 'משה ליראחאווער', 'משה מאיר פישלש', 'משה מארקברייטר', 'משה מדעסויא (מנדלסון, משה)', 'משה מייער', 'משה מינץ מבראד', 'משה נ"וו', 'משה ע"ש נחמן קארנפעלד', 'משה פאלאק', 'משה פליישער', 'משה פנחס זאהן', 'משה צבי ב"ר מנחם מוויהל', 'משה קינשבורג', "משה רוקה נחמי' לאקס", 'משולם הלוי נ"ש', 'משלם זלמן הכהן', 'משפחת איציג', 'נאווי דוואהר', 'נאטהאן טורנויער', 'נאטהאן מאייער', 'נבחוביץ, יהודה ליב', 'נויאן, אברהם', 'נח חיים צבי בן אברהם מאיר ברלין', "נחמי' גלויגא", 'נחמן בק"ק פלאצק', 'נחמן פיניליס', 'נחמן קראחמאלניק', 'נטע אויברנדארף, גב"צר', 'נטע לאבעטהאל', 'נטע מעזריטש בק"ב', 'נך, כ"ד', 'ננסיך, אברהם בן שלמה', 'נעבל, אייזק', 'נפתלי בהרב מו\' לוי זצ"ל', 'נפתלי במהורר חיים סגל', 'נפתלי הירץ אשכנזי', 'נפתלי הירץ בן בנימן זאב', 'נפתלי הירץ בן יהודה ליב, מהלברשטט', 'נפתלי הירץ לבין קצעלינבוגין', 'נפתלי הירץ מורא כהן', 'נפתלי הירץ מעדלסהיים', 'נפתלי הירש ב"ר משה לבית קצנאלנבוגן', 'נפתלי לבית לוי', 'נתן ארענשטיין', "נתן בהגאו' מו' צבי", 'נתן בהגאון מהר"צ בע"מ', 'נתן בר"ל מהלברשטט', 'נתן האמבערג', 'נתן ווערטהיים', 'נתן כ"ץ', 'נתן נטע', 'נתן פאצדם', 'נתנאל אשכנזי ווייל מפראג', 'נתנאל בר"מ', 'סאטור, ליפמן', 'סאלאמאן ווארמסער', 'סאלאמאן פרייזאך', 'סאלאמאן פרעשעל', 'סאלאמאן, עדלער פאן הערץ (Edler von)', 'סאלם מיללער', 'סאמועל אפפענהיים', 'סאמועל גאטטליעב', 'סאמועל דעטמטלד', 'סאמועל טוגענדהאפט', 'סאמועל טויבעס', 'סאמועל קערן', 'סטאבנץ', 'סיכאראפסקיע', 'סימאן בעק', 'סימאן לעמל', 'סימאן פאפפער', 'סמטור, דוד', 'סמטור, ליפמן', 'סמטור, שמואל', 'סעבאסטיאן זעעפעלד', 'סעדיה בן יוסף גאון', 'סענדער ריטטנער', 'סענדר אקסענפעלד', 'סענדר דירקהיים', 'סענדר מאיר סענדר פריעדבערג', 'סענדר סג"ל', 'עזריאל בר"י', 'עזריאל ווירמש בפפ"ד', "עליאס הערשפעלד (Dr. med., ארצט דעס איזר' קראנקענשפיטאלס)", 'עלקאן היימאן', 'עלקאן הערצבערג', 'עלקיש, יצחק', 'עמאנועל ווערטהיים', 'עמאנועל לעוו באכראך', 'עמאנועללע עפפינגער', 'ענגעל', 'ענדל בר"י שטערן', "עפראים וו' בערלינער", 'עקב פאפירנא', "עקיבא איגי'", 'פאלק שייער אליעזאהן', 'פאן, זלמן', 'פאפפער', 'פולפערמאכער (Dr.)', 'פולק, אהרן', 'פולק, מאיר בן גבריאל', 'פועלי בית הדפוס חנוך נערים', 'פורת יוסף', 'פיאצה, משה אהרן רחמים', 'פייבל ש"ל', 'פייבש בר"מ כ"ץ בפפד"א', 'פייבש וויצנהויזן', 'פייט ליכטענבערג', 'פייט פריעדלענדער', 'פייטל בעהם', 'פייס לוי', 'פייסט הילסבאך', 'פייפר כ"ץ', 'פילטא בהר"ר יוזל', 'פיליפסזאהן', 'פילליפ עללבאגען', 'פינקוס אראן אייזענשיטץ', 'פירדא, אלחנן מאיר בן אברהם,פרידלענדר, דוד', 'פישער', 'פלק כהן (עמנואל שושן עמק)', 'פנחס זעליג בן אהרן', 'פנחס קעלין', 'פנחס שטראלזונד', 'פנחס שניצלער', 'פעטער הייניטץ', 'פפונגסט', 'פראנק, וואלף', 'פרידלנדר, בערמן', 'פרידלנדר, בר"ד בונם', 'פרידלענדר', 'פרידלענדר, אברהם', 'פרידלענדר, בונם בר"ד בונם בר"ד פ"ל', 'פרידריך וילהלם', 'פריידל, יוסף', 'פריידלש', 'פרנקל, חיים', 'פרענקל (פו"מ), ליב', 'פרענקל, אברהם בר"ל', 'פרענקל, אהרן', 'פרענקל, אליהו', 'פרענקל, גבריאל', 'פרענקל, הירש בר"מ', 'פרענקל, ליב', 'צאדיק שלעזינגער', 'צאראך ווערטהיים (Dr. med.)', 'צבי הירש', 'צבי הירש אויערבך מבראנדיש', 'צבי הירש בלא"א הרב מהר"ם', 'צבי הירש בן מאיר', 'צבי הירש בן מנחם נחום', 'צבי הירש בן משולם זלמן סג"ל הורוויץ', 'צבי הירש בן שמעון כ"ץ', 'צבי הירש ליבשיץ', 'צבי הירש לנצבורג', 'צבי הירש מייזיל', 'צבי הירש מייזלש', 'צבי הירש מירלש', 'צבי הירש מלונדן', 'צבי הירש ראזאנים', 'צבי הירש ראזאנים (הרב אב"ד דק"ק לבוב וקרייז)', 'צבי יהושע הלוי איש הורוויץ', 'צדוק ב"ר יואך נויאן', 'צדוק בר"א', 'צדוק מברעסלויא', 'צדוק קינשבורג', "צילך, טעבל בר''י", 'צעזאר', 'צערף', 'קאהן', 'קאסל, ליב', 'קאסנטין הישנה', 'קאספר קאהן', 'קאפל המבורג', 'קארל בורשטיין', 'קארל קעניגסבערג', 'קוא, משה', 'קוניץ, משה', 'קיש', 'קלייף, בענדיט', 'קלמן נייאבויער', 'קלמן פארגעס', 'קעסלין, מאיר', "ר' עוזר איש אפרתי", "ר' שמואל ווערטהיימר", 'ראובן בר"מ צילץ', 'ראובן בר"ש', 'ראובן גומפערטץ', 'ראובן דרעזן', 'ראובן הערצבערג', 'ראזאליע עפפינגער', 'ראכנאווע, יוזל', 'ראנינבורג', 'רב אהרן בן משה מגזע צבי רא"בד', 'רב יצחק זעקיל עטהויזן', 'רונקל, שלמה', 'ריז, אברהם בר"מ', 'ריז, וואלף בר"מ', 'ריז, משה בן איצק', 'ריז, נתן בר"פ', 'ריזל אשת אהרן יורש', 'רינטל, יוסף', 'רינטל, משה', 'ריס, ישראל', 'ריס, נתן', 'רמב"ן', 'רפאל בר"ז', 'רפאל גלויגא', 'רפאל וואלף גינסבערג', 'רפאל וועהלי (בחורי חמד)', 'שאול', 'שאול (אב"ד באמסטרדם)', 'שאול (סג"ל אב"ד ר"מ)', 'שאול בן ר\' הירש לווין (אב"ד ק"ק פ"פ דאדר)', 'שאול הלוי', 'שאול כהנא', 'שאול לנדא', 'שאול מענדלזאהן', 'שאול ראגאשנע', 'שאול רבינ\' דייני ק"ק ברלין', 'שבתי בן דוד מיאנוב', 'שואל בר"א בפפד"א', 'שואל יפה', 'שטודס, ליפמן', 'שטראשון, שלמה', 'שטרעליץ, קאפל בן פו"מ אברהם', "שטרעליץ, קאפל בן פו''מ אברהם", 'שיאר, אברהם נפתלי הירץ', 'שינאווא (לה"ה אב"ד דק"ק), יצחק', 'שיף, איזק בר"ב', 'שכנא לאנדויא', 'שלאחטב, ברוך', 'שלאס', 'שלום', 'שלוס, מיכאל', 'שלמה', 'שלמה אבן גבירול', 'שלמה אלימלך ואברהם', 'שלמה ב"ר זלמן', 'שלמה ב"ר מנחם', 'שלמה בונצעל', 'שלמה בלאך', 'שלמה במהורר ישראל יצ"ו מק"ק שקלאוו', 'שלמה בר"ז', 'שלמה דוד נ"ש (בחורי חמד)', 'שלמה העלין', 'שלמה טורנויער', 'שלמה מבראד', 'שלמה ניערנשטיין', 'שלמה פ"ל', 'שלמה צבי', 'שלמה צוואנגער', 'שלמה צעדניק', 'שלמה קארגא', 'שלמה קראנעק', 'שלמה קראנק', 'שלמה רונקל', 'שלמה שלם', 'שלעזינגר, הירץ', 'שמה הארשין (בחורי חמד)', 'שמואל ב"כה נפתלי הירץ', 'שמואל בו פ"ום ר"ר אשרי', 'שמואל בן הרב הגאון בענדיט', "שמואל בן הרב ט' יצחק", 'שמואל בן שלמה חלפן', 'שמואל בפרוישטאט', 'שמואל בר"א', 'שמואל בר"י', 'שמואל בר"ש סג"ל', 'שמואל ברוך בינאוינטי', 'שמואל ברסלא', 'שמואל העלפט', 'שמואל וואלף', 'שמואל ווארבורג', 'שמואל ווערטהיים', 'שמואל זנוויל', 'שמואל זנוויל בראנדיבורג', 'שמואל כ"ץ', 'שמואל כהרר נפתלי הירץ', 'שמואל לאנדא', 'שמואל לוי', 'שמואל לוי בר"שח', 'שמואל לוי פרענקל', 'שמואל ניקלסוברג', 'שמואל סג"ל לנדא', 'שמואל סטנאב', 'שמואל סמטור', 'שמואל פ"ד', 'שמואל פ"ל', 'שמואל פאלאק', 'שמואל פרנס דד"א', 'שמואל צבי בן קלונימוס קלמן', 'שמואל קיניגסשפירר', 'שמואל רארמיטצער', 'שמואל שמעלקא ליב', 'שמחה לינטל', 'שמחה קלימני', 'שמחה שינאף', 'שמעון ב"ר שלמה הנאבר', 'שמעון בן גדליה', 'שמעון בר"ט בש"ל', 'שמעון ברוינשווייג', 'שמעון ג"ה (בחורי חמד)', 'שמעון דוב גוטענטאג', 'שמעון יעקב פעסילש', 'שמעון מערגנטהיים', 'שמעון פ"ל', 'שמעון פ"ל בק"ב', 'שמעון פיורדא', 'שמעון פיורדא קנעלקי (בחורי חמד)', 'שמעון פייט', 'שמעון קרעמזיר', 'שמעון רוק מפ"ב', "שמעי' בעער העללער", "שמעי' לאנצבורג", "שמעי' קראקויר", 'שמעלקא ליב', 'שמשון', 'שמשון בה"ב', 'שמשון מחאליוב', 'שניאור בר"ם שפירא', 'שערשאווי', 'שקוד האזפוט'])),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('gender', models.CharField(blank=True, max_length=255)),
                ('german_name', models.CharField(blank=True, max_length=255)),
                ('german_name_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('hebrew_name', models.CharField(blank=True, max_length=255)),
                ('hebrew_name_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('occupation', models.IntegerField(blank=True, null=True)),
                ('VIAF_ID', models.CharField(blank=True, max_length=255)),
                ('VIAF_ID_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('date_of_birth', models.CharField(blank=True, max_length=255)),
                ('date_of_death', models.CharField(blank=True, max_length=255)),
                ('place_of_birth', models.IntegerField(blank=True, null=True)),
                ('place_of_death', models.IntegerField(blank=True, null=True)),
                ('pseudonym', models.CharField(blank=True, max_length=255)),
                ('pseudonym_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PersonPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='PlacesPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('body', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Preface',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notes', models.CharField(blank=True, max_length=255, null=True)),
                ('notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('number', models.IntegerField(blank=True, default=1, null=True)),
                ('number_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('title_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('writer', models.IntegerField(blank=True, null=True)),
                ('writer_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
            ],
            options={
                'verbose_name_plural': 'Prefaces',
            },
        ),
        migrations.CreateModel(
            name='Production',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('producer', models.IntegerField(blank=True, null=True)),
                ('role', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('language', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.IntegerField(blank=True, null=True)),
                ('references', models.CharField(blank=True, max_length=255, null=True)),
                ('references_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('year', models.CharField(blank=True, max_length=255)),
                ('year_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('translator', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Translation_Type',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Translation Types',
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bundle', models.CharField(choices=[('translation', 'Translation'), ('edition', 'Edition'), ('mention', 'Mention'), ('preface', 'Preface'), ('person', 'Person'), ('book', 'Book'), ('production', 'Production')], max_length=255)),
                ('alignment', models.CharField(blank=True, max_length=255)),
                ('availability_notes', models.CharField(blank=True, max_length=255)),
                ('availability_notes_format', models.CharField(blank=True, max_length=255)),
                ('not_available', models.BooleanField()),
                ('structure_notes', models.CharField(blank=True, max_length=255)),
                ('structure_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('studies', models.CharField(blank=True, max_length=255)),
                ('studies_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('type_general_notes', models.CharField(blank=True, max_length=255)),
                ('type_general_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('bans', models.CharField(blank=True, max_length=255)),
                ('bans_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('bar_ilan_library_id', models.CharField(blank=True, max_length=255)),
                ('berlin_library_id', models.CharField(blank=True, max_length=255)),
                ('bar_ilan_library_id_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('bibliographical_citations', models.CharField(blank=True, max_length=255)),
                ('bibliographical_citations_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('british_library_id', models.CharField(blank=True, max_length=255)),
                ('british_library_id_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('catalog_numbers_notes', models.CharField(blank=True, max_length=255)),
                ('catalog_numbers_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('censorship', models.CharField(blank=True, max_length=255)),
                ('censorship_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('contacts_official_agents', models.CharField(blank=True, max_length=255)),
                ('contacts_official_agents_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('contacts_other_people', models.CharField(blank=True, max_length=255)),
                ('contacts_other_people_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], max_length=255, null=True)),
                ('contemporary_disputes', models.CharField(blank=True, max_length=255)),
                ('contemporary_disputes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('contemporary_references', models.CharField(blank=True, max_length=255)),
                ('contemporary_references_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('contents_table_notes', models.CharField(blank=True, max_length=255)),
                ('contents_table_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('contradict_new_edition', models.IntegerField(default=1)),
                ('contradict_original', models.IntegerField(default=1)),
                ('copy_of_book_used', models.CharField(blank=True, max_length=255)),
                ('copy_of_book_used_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('dedications', models.CharField(blank=True, max_length=255)),
                ('dedications_notes', models.CharField(blank=True, max_length=255)),
                ('dedications_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('diagrams_book_pages', models.CharField(blank=True, max_length=255)),
                ('diagrams_book_pages_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('diagrams_notes', models.CharField(blank=True, max_length=255)),
                ('diagrams_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('editions_notes', models.CharField(blank=True, max_length=255)),
                ('editions_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('epilogue', models.IntegerField(blank=True, default=0, null=True)),
                ('epilogue_notes', models.CharField(blank=True, max_length=255)),
                ('epilogue_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('examined_volume_number', models.IntegerField(blank=True, default=1, null=True)),
                ('expanded_in_edition', models.IntegerField(blank=True, default=1, null=True)),
                ('expanded_in_translation', models.IntegerField(blank=True, default=1, null=True)),
                ('fonts', models.IntegerField(blank=True, null=True)),
                ('format_of_publication_date', models.IntegerField(blank=True, null=True)),
                ('founders_notes', models.CharField(blank=True, max_length=255)),
                ('founders_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('frankfurt_library_id', models.CharField(blank=True, max_length=255)),
                ('frankfurt_library_id_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('full_title', models.CharField(blank=True, max_length=255)),
                ('full_title_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('founders', models.IntegerField(blank=True, default=0, null=True)),
                ('gregorian_year', models.IntegerField(blank=True, default=0, null=True)),
                ('gregorian_year_pub_other', models.CharField(blank=True, max_length=255)),
                ('gregorian_year_pub_other_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('hebrew_year_pub_other', models.CharField(blank=True, max_length=255)),
                ('hebrew_year_pub_other_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('hebrew_year_of_publication', models.CharField(blank=True, max_length=255)),
                ('hebrew_year_of_publication_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('height', models.CharField(blank=True, max_length=255)),
                ('height_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('huji_library_id', models.CharField(blank=True, max_length=255)),
                ('huji_library_id_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('illustrations_diagrams', models.IntegerField(blank=True, default=0, null=True)),
                ('jewish_sources_quotes', models.CharField(blank=True, max_length=255)),
                ('jewish_sources_quotes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('language', models.IntegerField(blank=True, null=True)),
                ('languages_of_footnotes', models.IntegerField(blank=True, null=True)),
                ('languages_number', models.IntegerField(blank=True, null=True)),
                ('last_known_edition', models.CharField(blank=True, max_length=255)),
                ('last_known_edition_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('later_references', models.CharField(blank=True, max_length=255)),
                ('later_references_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('digital_book_url', models.CharField(blank=True, max_length=255)),
                ('digital_book_url_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('location_of_footnotes', models.IntegerField(blank=True, null=True)),
                ('main_textual_models', models.IntegerField(blank=True, null=True)),
                ('mention_general_notes', models.CharField(blank=True, max_length=255)),
                ('mention_general_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('mentions_in_reviews', models.CharField(blank=True, max_length=255)),
                ('mentions_in_reviews_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('motto', models.CharField(blank=True, max_length=255)),
                ('motto_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('name_in_book', models.CharField(blank=True, max_length=255)),
                ('name_in_book_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('name_of_series', models.IntegerField(blank=True, null=True)),
                ('new_edition_general_notes', models.CharField(blank=True, max_length=255)),
                ('new_edition_general_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('new_edition_type_else_note', models.CharField(blank=True, max_length=255)),
                ('new_edition_type_else_note_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('new_edition_type_else_ref', models.CharField(blank=True, max_length=255)),
                ('new_edition_type_else_ref_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('new_edition_type_elsewhere', models.CharField(blank=True, max_length=255)),
                ('new_edition_type_elsewhere_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('new_edition_type_in_text', models.CharField(blank=True, max_length=255)),
                ('new_edition_type_in_text_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('new_edition_type_notes', models.CharField(blank=True, max_length=255)),
                ('new_edition_type_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('new_edition_type_reference', models.CharField(blank=True, max_length=255)),
                ('new_edition_type_reference_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('new_york_library_id', models.CharField(blank=True, max_length=255)),
                ('new_york_library_id_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('non_jewish_sources_quotes', models.CharField(blank=True, max_length=255)),
                ('non_jewish_sources_quotes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('occasional_words_languages', models.IntegerField(blank=True, null=True)),
                ('old_author_addition_names', models.CharField(blank=True, max_length=255)),
                ('old_author_addition_names_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('old_author_names_other_sor', models.CharField(blank=True, max_length=255)),
                ('old_author_names_other_sor_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('old_name_in_book', models.CharField(blank=True, max_length=255)),
                ('old_name_in_book_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('old_text', models.CharField(blank=True, max_length=255)),
                ('old_text_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('old_text_author', models.IntegerField(blank=True, null=True)),
                ('old_text_author_in_book', models.CharField(blank=True, max_length=255)),
                ('old_text_author_in_book_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_author', models.CharField(blank=True, max_length=255)),
                ('original_author_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_author_else_refer', models.CharField(blank=True, max_length=255)),
                ('original_author_else_refer_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_author_elsewhere', models.CharField(blank=True, max_length=255)),
                ('original_author_elsewhere_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_author_other_name', models.CharField(blank=True, max_length=255)),
                ('original_author_other_name_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_language', models.IntegerField(blank=True, null=True)),
                ('original_publication_year', models.CharField(blank=True, max_length=255)),
                ('original_publication_year_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_publisher', models.IntegerField(blank=True, null=True)),
                ('original_sources_mention', models.CharField(blank=True, max_length=255)),
                ('original_sources_mention_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_text_author', models.IntegerField(blank=True, null=True)),
                ('original_text_name', models.CharField(blank=True, max_length=255)),
                ('original_text_name_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_title', models.CharField(blank=True, max_length=255)),
                ('original_title_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_title_else_refer', models.CharField(blank=True, max_length=255)),
                ('original_title_else_refer_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_title_elsewhere', models.CharField(blank=True, max_length=255)),
                ('original_title_elsewhere_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('original_type', models.IntegerField(blank=True, null=True)),
                ('other_books_names', models.CharField(blank=True, max_length=255)),
                ('other_books_names_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('other_libraries', models.CharField(blank=True, max_length=255)),
                ('other_libraries_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('other_volumes', models.CharField(blank=True, max_length=255)),
                ('other_volumes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('pages_number', models.CharField(blank=True, max_length=255)),
                ('pages_number_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('partial_publication_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('person_name_appear', models.IntegerField(blank=True, null=True)),
                ('personal_address', models.IntegerField(blank=True, null=True)),
                ('personal_address_notes', models.CharField(blank=True, max_length=255)),
                ('personal_address_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('planned_volumes', models.CharField(blank=True, max_length=255)),
                ('planned_volumes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('preface', models.IntegerField(blank=True, null=True)),
                ('presented_as_original', models.IntegerField(blank=True, null=True)),
                ('presented_as_translation', models.IntegerField(blank=True, null=True)),
                ('presented_new_edition', models.IntegerField(blank=True, null=True)),
                ('presented_new_edition_note', models.CharField(blank=True, max_length=255)),
                ('presented_new_edition_note_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('presented_new_edition_refe', models.CharField(blank=True, max_length=255)),
                ('presented_new_edition_refe_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('presented_original_referen', models.CharField(blank=True, max_length=255)),
                ('presented_original_referen_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('presented_as_translatio_notes', models.CharField(blank=True, max_length=255)),
                ('presented_as_translatio_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('presented_as_translation_refe', models.CharField(blank=True, max_length=255)),
                ('presented_as_translation_refe_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('preservation_references', models.CharField(blank=True, max_length=255)),
                ('preservation_references_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('price', models.CharField(blank=True, max_length=255)),
                ('price_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('printed_originally', models.IntegerField(blank=True, null=True)),
                ('printers', models.IntegerField(blank=True, null=True)),
                ('printers_notes', models.CharField(blank=True, max_length=255)),
                ('printers_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('printing_press_notes', models.CharField(blank=True, max_length=255)),
                ('printing_press_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('printing_press_references', models.CharField(blank=True, max_length=255)),
                ('printing_press_references_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('production_evidence', models.CharField(blank=True, max_length=255)),
                ('production_evidence_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('proofreaders', models.IntegerField(blank=True, null=True)),
                ('proofreaders_notes', models.CharField(blank=True, max_length=255)),
                ('proofreaders_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('publication_place', models.IntegerField(blank=True, null=True)),
                ('publication_place_other', models.IntegerField(blank=True, null=True)),
                ('year_in_book', models.CharField(blank=True, max_length=255)),
                ('year_in_book_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('year_in_other', models.CharField(blank=True, max_length=255)),
                ('publisher_name', models.IntegerField(blank=True, null=True)),
                ('rabbinical_approbation_notes', models.CharField(blank=True, max_length=255)),
                ('rabbinical_approbation_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('rabbinical_approbations', models.IntegerField(blank=True, null=True)),
                ('recommendations', models.IntegerField(blank=True, null=True)),
                ('recommendations_notes', models.CharField(blank=True, max_length=255)),
                ('recommendations_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('references_for_editions', models.CharField(blank=True, max_length=255)),
                ('references_for_editions_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('references_notes', models.CharField(blank=True, max_length=255)),
                ('references_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('secondary_sources', models.CharField(blank=True, max_length=255)),
                ('secondary_sources_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('secondary_textual_models', models.IntegerField(blank=True, null=True)),
                ('sellers', models.IntegerField(blank=True, null=True)),
                ('sellers_notes', models.CharField(blank=True, max_length=255)),
                ('sellers_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('series_part', models.IntegerField(blank=True, null=True)),
                ('sources_exist', models.IntegerField(blank=True, null=True)),
                ('sources_list', models.CharField(blank=True, max_length=255)),
                ('sources_list_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('sources_not_mentioned', models.IntegerField(blank=True, null=True)),
                ('sources_not_mentioned_list', models.CharField(blank=True, max_length=255)),
                ('sources_not_mentioned_list_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('sources_not_mentioned_ref', models.CharField(blank=True, max_length=255)),
                ('sources_not_mentioned_ref_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('sources_references', models.CharField(blank=True, max_length=255)),
                ('sources_references_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('structure_preface_notes', models.CharField(blank=True, max_length=255)),
                ('structure_preface_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('subscribers', models.IntegerField(blank=True, null=True)),
                ('subscribers_notes', models.CharField(blank=True, max_length=255)),
                ('subscribers_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('subscription_appeal', models.IntegerField(blank=True, null=True)),
                ('subscription_appeal_notes', models.CharField(blank=True, max_length=255)),
                ('subscription_appeal_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('table_of_content', models.IntegerField(blank=True, null=True)),
                ('target_audience', models.IntegerField(blank=True, null=True)),
                ('target_audience_notes', models.CharField(blank=True, max_length=255)),
                ('target_audience_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('tel_aviv_library_id', models.CharField(blank=True, max_length=255)),
                ('tel_aviv_library_id_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('textual_model_notes', models.CharField(blank=True, max_length=255)),
                ('textual_model_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('thanks', models.IntegerField(blank=True, null=True)),
                ('thanks_notes', models.CharField(blank=True, max_length=255)),
                ('thanks_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('title_in_latin_characters', models.CharField(blank=True, max_length=255)),
                ('title_in_latin_characters_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('topic', models.IntegerField(blank=True, null=True)),
                ('topics_notes', models.CharField(blank=True, max_length=255)),
                ('topics_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('total_number_of_editions', models.CharField(blank=True, max_length=255)),
                ('total_number_of_editions_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('translation_notes', models.CharField(blank=True, max_length=255)),
                ('translation_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('translation_type', models.IntegerField(blank=True, null=True)),
                ('typography', models.IntegerField(blank=True, null=True)),
                ('volumes_notes', models.CharField(blank=True, max_length=255)),
                ('volumes_notes_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('volumes_published_number', models.CharField(blank=True, max_length=255)),
                ('volumes_published_number_format', models.CharField(blank=True, choices=[('', 'None'), ('text', 'Text'), ('filtered_html', 'Filtered HTML'), ('full_html', 'Full HTML'), ('markdown', 'Markdown'), ('xml', 'XML'), ('json', 'JSON')], default='NULL', max_length=255, null=True)),
                ('user', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Geolocation',
            fields=[
                ('uuid', models.UUIDField(auto_created=True, default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('lat', models.FloatField(blank=True, max_length=255, null=True)),
                ('lng', models.FloatField(blank=True, max_length=255, null=True)),
                ('lat_sin', models.FloatField(blank=True, max_length=255, null=True)),
                ('lat_cos', models.FloatField(blank=True, max_length=255, null=True)),
                ('lng_rad', models.FloatField(blank=True, max_length=255, null=True)),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.city')),
            ],
        ),
    ]
